{
  "name": "Simple Slack Notification",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "slack-notify",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "webhook-receiver",
      "name": "Receive Notification Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [300, 300],
      "webhookId": "slack-notify"
    },
    {
      "parameters": {
        "jsCode": "// ÏïåÎ¶º Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨\nconst notification = $json;\n\n// Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï\nconst title = notification.title || 'ÏïåÎ¶º';\nconst message = notification.message || '';\nconst type = notification.type || 'info';\nconst priority = notification.priority || 'medium';\n\n// ÌÉÄÏûÖÎ≥Ñ Ïù¥Î™®ÏßÄ\nconst emojis = {\n  'success': '‚úÖ',\n  'error': '‚ùå',\n  'warning': '‚ö†Ô∏è',\n  'info': '‚ÑπÔ∏è',\n  'analysis_complete': 'üéØ',\n  'new_candidate': 'üåü',\n  'high_score': 'üèÜ'\n};\n\nconst emoji = emojis[type] || 'üì¢';\n\n// Slack Î©îÏãúÏßÄ Íµ¨ÏÑ±\nconst slackMessage = {\n  text: `${emoji} ${title}`,\n  message: message,\n  timestamp: new Date().toISOString(),\n  metadata: notification.metadata || {}\n};\n\nreturn [{ json: slackMessage }];"
      },
      "id": "format-message",
      "name": "Format Slack Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [500, 300]
    },
    {
      "parameters": {
        "channel": "{{ $env.SLACK_CHANNEL }}",
        "text": "{{ $json.text }}\n\n{{ $json.message }}",
        "otherOptions": {}
      },
      "id": "send-slack",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [700, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "sent"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "response",
      "name": "Return Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Receive Notification Request": {
      "main": [
        [
          {
            "node": "Format Slack Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Slack Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        [
          {
            "node": "Return Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-27T00:00:00.000Z",
  "updatedAt": "2025-06-27T00:00:00.000Z",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {},
  "active": true
}