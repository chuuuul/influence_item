{
  "name": "Google Sheets Real-time Sync Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sheets-webhook",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "sheets-webhook",
      "name": "Google Sheets Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        300,
        300
      ],
      "webhookId": "google-sheets-changes"
    },
    {
      "parameters": {
        "jsCode": "// Google Sheets Webhook \ub370\uc774\ud130 \ud30c\uc2f1\nconst webhookData = $json;\n\nconsole.log('Google Sheets \ubcc0\uacbd\uc0ac\ud56d \uac10\uc9c0:', webhookData);\n\n// Webhook \ub370\uc774\ud130 \uad6c\uc870 \ud30c\uc2f1\nconst changeData = {\n  eventType: webhookData.eventType || 'unknown',\n  spreadsheetId: webhookData.spreadsheetId,\n  sheetId: webhookData.sheetId,\n  range: webhookData.range,\n  changeType: webhookData.changeType || 'edit',\n  timestamp: new Date().toISOString(),\n  rawData: webhookData\n};\n\n// \ucc44\ub110 \ubaa9\ub85d \uc2dc\ud2b8 \ubcc0\uacbd\uc778\uc9c0 \ud655\uc778\nconst isChannelListChange = changeData.spreadsheetId === $env.GOOGLE_SHEETS_CHANNEL_LIST_ID;\n\nreturn [{\n  json: {\n    ...changeData,\n    isChannelListChange: isChannelListChange,\n    needsSync: isChannelListChange\n  }\n}];"
      },
      "id": "parse-webhook-data",
      "name": "Parse Webhook Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-channel-list",
              "leftValue": "={{ $json.isChannelListChange }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-channel-list",
      "name": "Check Channel List Change",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "sheet",
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "{{$env.GOOGLE_SHEETS_CHANNEL_LIST_ID}}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "\ucc44\ub110\ubaa9\ub85d",
          "mode": "name"
        },
        "options": {
          "range": "A:D",
          "valueRenderMode": "FORMATTED_VALUE"
        }
      },
      "id": "read-updated-channels",
      "name": "Read Updated Channel List",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "jsCode": "// \uc5c5\ub370\uc774\ud2b8\ub41c \ucc44\ub110 \ubaa9\ub85d \ucc98\ub9ac \ubc0f \ubcc0\uacbd\uc0ac\ud56d \ud0d0\uc9c0\nconst channels = [];\nconst inputData = $input.all();\nconst webhookData = $('Parse Webhook Data').item.json;\n\n// \ud604\uc7ac \uc2dc\uac04\nconst syncTime = new Date().toISOString();\n\n// \uccab \ubc88\uc9f8 \ud589\uc740 \ud5e4\ub354\uc774\ubbc0\ub85c \uc81c\uc678\nfor (let i = 1; i < inputData.length; i++) {\n  const row = inputData[i].json;\n  \n  // \ucc44\ub110\uba85, RSS URL, \ud0c0\uc785, \uc5f0\uc608\uc778 \uc774\ub984 \ucd94\ucd9c\n  if (row.A && row.B) { // \ucc44\ub110\uba85\uacfc RSS URL\uc774 \uc788\ub294 \uacbd\uc6b0\ub9cc\n    channels.push({\n      channelName: row.A,\n      rssUrl: row.B,\n      channelType: row.C || 'personal',\n      celebrityNames: row.D ? row.D.split(',').map(name => name.trim()) : [],\n      lastUpdated: syncTime\n    });\n  }\n}\n\nconsole.log(`\ucc44\ub110 \ubaa9\ub85d \ub3d9\uae30\ud654: ${channels.length}\uac1c \ucc44\ub110 \uc5c5\ub370\uc774\ud2b8\ub428`);\n\n// \ub3d9\uae30\ud654 \uacb0\uacfc \ub370\uc774\ud130 \uad6c\uc131\nconst syncResult = {\n  syncTime: syncTime,\n  totalChannels: channels.length,\n  changeEvent: webhookData,\n  channels: channels,\n  syncStatus: 'completed'\n};\n\nreturn [{ json: syncResult }];"
      },
      "id": "process-channel-sync",
      "name": "Process Channel Sync",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "{{ $env.PYTHON_ANALYSIS_ENDPOINT }}/sync-channels",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.ANALYSIS_API_KEY }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "channels",
              "value": "={{ JSON.stringify($json.channels) }}"
            },
            {
              "name": "sync_time",
              "value": "={{ $json.syncTime }}"
            },
            {
              "name": "total_channels",
              "value": "={{ $json.totalChannels }}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "update-python-channels",
      "name": "Update Python System Channels",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1300,
        200
      ]
    },
    {
      "parameters": {
        "channel": "{{ $env.SLACK_CHANNEL }}",
        "text": "\ud83d\udccb \ucc44\ub110 \ubaa9\ub85d \uc790\ub3d9 \ub3d9\uae30\ud654 \uc644\ub8cc\\n\\n\ud83d\udcca \ub3d9\uae30\ud654 \uacb0\uacfc:\\n- \ucd1d \ucc44\ub110 \uc218: {{ $json.totalChannels }}\uac1c\\n- \ub3d9\uae30\ud654 \uc2dc\uac04: {{ $json.syncTime }}\\n- \ubcc0\uacbd \ubc94\uc704: {{ $('Parse Webhook Data').item.json.range }}\\n\\n\u2705 Python \uc2dc\uc2a4\ud15c\uacfc \ub3d9\uae30\ud654 \uc644\ub8cc",
        "otherOptions": {}
      },
      "id": "notify-sync-success",
      "name": "Notify Sync Success",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1500,
        200
      ]
    },
    {
      "parameters": {
        "jsCode": "// \ucc44\ub110 \ubaa9\ub85d \ubcc0\uacbd\uc774 \uc544\ub2cc \uacbd\uc6b0 \ub85c\uae45\nconst webhookData = $json;\n\nconsole.log('\ube44\ucc44\ub110 \ubaa9\ub85d \uc2dc\ud2b8 \ubcc0\uacbd\uc0ac\ud56d \uac10\uc9c0:', webhookData.spreadsheetId);\n\nreturn [{\n  json: {\n    message: '\ucc44\ub110 \ubaa9\ub85d\uc774 \uc544\ub2cc \uc2dc\ud2b8 \ubcc0\uacbd\uc0ac\ud56d \uac10\uc9c0\ub428',\n    spreadsheetId: webhookData.spreadsheetId,\n    action: 'ignored',\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "log-other-changes",
      "name": "Log Other Sheet Changes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "// \uc5d0\ub7ec \ucc98\ub9ac \ubc0f \ub85c\uae45\nconst error = $json;\nconst webhookData = $('Parse Webhook Data').item.json;\n\nconsole.error('\ucc44\ub110 \ub3d9\uae30\ud654 \uc2e4\ud328:', error);\n\nreturn [{\n  json: {\n    error: error.message || '\uc54c \uc218 \uc5c6\ub294 \uc624\ub958',\n    webhookData: webhookData,\n    errorTime: new Date().toISOString(),\n    status: 'sync_failed'\n  }\n}];"
      },
      "id": "handle-sync-error",
      "name": "Handle Sync Error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1300,
        400
      ]
    },
    {
      "parameters": {
        "channel": "{{ $env.SLACK_CHANNEL }}",
        "text": "\u274c \ucc44\ub110 \ubaa9\ub85d \ub3d9\uae30\ud654 \uc2e4\ud328\\n\\n\ud83d\udca5 \uc5d0\ub7ec \ub0b4\uc6a9:\\n{{ $json.error }}\\n\\n\u23f0 \ubc1c\uc0dd \uc2dc\uac04: {{ $json.errorTime }}\\n\\n\ud83d\udd27 \uc6b4\uc601\uc790 \ud655\uc778\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.",
        "otherOptions": {}
      },
      "id": "notify-sync-error",
      "name": "Notify Sync Error",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1500,
        400
      ]
    }
  ],
  "connections": {
    "Google Sheets Webhook": {
      "main": [
        [
          {
            "node": "Parse Webhook Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Webhook Data": {
      "main": [
        [
          {
            "node": "Check Channel List Change",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Channel List Change": {
      "main": [
        [
          {
            "node": "Read Updated Channel List",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Other Sheet Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Updated Channel List": {
      "main": [
        [
          {
            "node": "Process Channel Sync",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Channel Sync": {
      "main": [
        [
          {
            "node": "Update Python System Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Python System Channels": {
      "main": [
        [
          {
            "node": "Notify Sync Success",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "Handle Sync Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Sync Error": {
      "main": [
        [
          {
            "node": "Notify Sync Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-23T21:48:00.000Z",
  "updatedAt": "2025-06-23T21:48:00.000Z",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": {
      "id": "error-workflow"
    }
  },
  "staticData": {},
  "tags": [
    "google-sheets",
    "sync",
    "realtime",
    "channels"
  ]
}