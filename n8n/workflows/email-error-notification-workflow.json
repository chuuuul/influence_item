{
  "name": "Email Error Notification Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "system-error",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "error-webhook",
      "name": "System Error Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        300,
        300
      ],
      "webhookId": "system-error"
    },
    {
      "parameters": {
        "jsCode": "// 시스템 에러 데이터 파싱 및 심각도 분류\nconst errorData = $json;\n\nconsole.log('시스템 에러 알림 수신:', errorData.error_type);\n\n// 에러 심각도 분류\nfunction getErrorSeverity(errorType, errorMessage) {\n  const criticalKeywords = ['database', 'connection', 'authentication', 'permission', 'crash', 'fatal'];\n  const highKeywords = ['api', 'timeout', 'rate limit', 'memory', 'disk space'];\n  \n  const lowerError = (errorMessage || '').toLowerCase();\n  const lowerType = (errorType || '').toLowerCase();\n  \n  if (criticalKeywords.some(keyword => lowerError.includes(keyword) || lowerType.includes(keyword))) {\n    return 'CRITICAL';\n  } else if (highKeywords.some(keyword => lowerError.includes(keyword) || lowerType.includes(keyword))) {\n    return 'HIGH';\n  } else {\n    return 'MEDIUM';\n  }\n}\n\n// 에러 분류\nconst severity = getErrorSeverity(errorData.error_type, errorData.error_message);\n\n// 에러 정보 구조화\nconst errorInfo = {\n  errorId: errorData.error_id || `ERR-${Date.now()}`,\n  errorType: errorData.error_type || 'Unknown',\n  errorMessage: errorData.error_message || 'No message provided',\n  severity: severity,\n  component: errorData.component || 'Unknown Component',\n  timestamp: errorData.timestamp || new Date().toISOString(),\n  stackTrace: errorData.stack_trace || null,\n  userId: errorData.user_id || null,\n  requestId: errorData.request_id || null,\n  environment: errorData.environment || 'production',\n  additionalData: errorData.additional_data || {},\n  dashboardUrl: errorData.dashboard_url || `${$env.DASHBOARD_BASE_URL}/system/errors`\n};\n\n// 우선순위 설정 (CRITICAL > HIGH > MEDIUM)\nconst shouldSendEmail = ['CRITICAL', 'HIGH'].includes(severity);\n\nreturn [{\n  json: {\n    ...errorInfo,\n    shouldSendEmail: shouldSendEmail,\n    priorityLevel: severity === 'CRITICAL' ? 1 : severity === 'HIGH' ? 2 : 3\n  }\n}];"
      },
      "id": "parse-error-data",
      "name": "Parse Error Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "should-email",
              "leftValue": "={{ $json.shouldSendEmail }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-email-required",
      "name": "Check Email Required",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// HTML 이메일 템플릿 생성\nconst error = $json;\n\n// 심각도별 색상 및 이모지\nconst severityConfig = {\n  'CRITICAL': { color: '#FF4444', emoji: '🚨', bgColor: '#FFF5F5' },\n  'HIGH': { color: '#FF8800', emoji: '⚠️', bgColor: '#FFFAF0' },\n  'MEDIUM': { color: '#4A90E2', emoji: 'ℹ️', bgColor: '#F0F8FF' }\n};\n\nconst config = severityConfig[error.severity] || severityConfig['MEDIUM'];\n\n// 추가 정보 섹션 생성\nlet additionalInfo = '';\nif (error.stackTrace) {\n  additionalInfo += `\n    <div style=\"margin-top: 20px;\">\n      <h3 style=\"color: #333; margin-bottom: 10px;\">Stack Trace:</h3>\n      <pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto; font-size: 12px;\">${error.stackTrace}</pre>\n    </div>`;\n}\n\nif (Object.keys(error.additionalData).length > 0) {\n  additionalInfo += `\n    <div style=\"margin-top: 20px;\">\n      <h3 style=\"color: #333; margin-bottom: 10px;\">Additional Data:</h3>\n      <pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto; font-size: 12px;\">${JSON.stringify(error.additionalData, null, 2)}</pre>\n    </div>`;\n}\n\n// HTML 이메일 템플릿\nconst htmlTemplate = `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>System Error Alert</title>\n</head>\n<body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;\">\n    <div style=\"background: ${config.bgColor}; border-left: 5px solid ${config.color}; padding: 20px; margin-bottom: 20px; border-radius: 4px;\">\n        <h1 style=\"margin: 0; color: ${config.color}; font-size: 24px;\">\n            ${config.emoji} System Error Alert - ${error.severity}\n        </h1>\n    </div>\n    \n    <div style=\"background: #fff; padding: 20px; border-radius: 4px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n        <h2 style=\"color: #333; margin-top: 0;\">Error Details</h2>\n        \n        <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\">\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold; width: 30%;\">Error ID:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.errorId}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">Type:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.errorType}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">Component:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.component}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">Timestamp:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${new Date(error.timestamp).toLocaleString()}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">Environment:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.environment}</td>\n            </tr>\n            ${error.userId ? `\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">User ID:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.userId}</td>\n            </tr>` : ''}\n            ${error.requestId ? `\n            <tr>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee; font-weight: bold;\">Request ID:</td>\n                <td style=\"padding: 8px; border-bottom: 1px solid #eee;\">${error.requestId}</td>\n            </tr>` : ''}\n        </table>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <h3 style=\"color: #333; margin-bottom: 10px;\">Error Message:</h3>\n            <div style=\"background: #f9f9f9; padding: 15px; border-radius: 4px; border-left: 3px solid ${config.color};\">\n                <code style=\"font-size: 14px;\">${error.errorMessage}</code>\n            </div>\n        </div>\n        \n        ${additionalInfo}\n        \n        <div style=\"margin-top: 30px; text-align: center;\">\n            <a href=\"${error.dashboardUrl}\" style=\"background: ${config.color}; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;\">View in Dashboard</a>\n        </div>\n    </div>\n    \n    <div style=\"margin-top: 20px; padding: 15px; background: #f5f5f5; border-radius: 4px; font-size: 12px; color: #666;\">\n        <p style=\"margin: 0;\">This is an automated error notification from the Influence Item Analysis System.</p>\n        <p style=\"margin: 5px 0 0 0;\">Please investigate and resolve this issue as soon as possible.</p>\n    </div>\n</body>\n</html>\n`;\n\n// 이메일 데이터 구성\nconst emailData = {\n  to: $env.ADMIN_EMAIL,\n  subject: `[${error.severity}] System Error in ${error.component} - ${error.errorType}`,\n  html: htmlTemplate,\n  priority: error.severity === 'CRITICAL' ? 'high' : 'normal'\n};\n\nreturn [{ json: emailData }];"
      },
      "id": "format-error-email",
      "name": "Format Error Email",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "fromEmail": "{{ $env.SMTP_FROM_EMAIL }}",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "emailFormat": "html",
        "html": "={{ $json.html }}",
        "options": {\n          \"priority\": \"={{ $json.priority }}\"\n        }\n      },\n      \"id\": \"send-error-email\",\n      \"name\": \"Send Error Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"typeVersion\": 2,\n      \"position\": [\n        1100,\n        200\n      ],\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"smtp-credentials\",\n          \"name\": \"SMTP Credentials\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"channel\": \"{{ $env.SLACK_CHANNEL }}\",\n        \"text\": \"📧 시스템 에러 이메일 발송 완료\\n\\n🚨 심각도: {{ $('Parse Error Data').item.json.severity }}\\n💥 에러 타입: {{ $('Parse Error Data').item.json.errorType }}\\n📧 수신자: {{ $json.to }}\\n⏰ 발송 시간: {{ new Date().toISOString() }}\",\n        \"otherOptions\": {}\n      },\n      \"id\": \"notify-email-sent\",\n      \"name\": \"Notify Email Sent\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        1300,\n        200\n      ]\n    },\n    {\n      \"parameters\": {\n        \"channel\": \"{{ $env.SLACK_CHANNEL }}\",\n        \"text\": \"ℹ️ 낮은 우선순위 시스템 이벤트\\n\\n📊 심각도: {{ $json.severity }}\\n🔧 컴포넌트: {{ $json.component }}\\n💬 메시지: {{ $json.errorMessage }}\\n⏰ 시간: {{ $json.timestamp }}\\n\\n💡 이메일 알림은 발송되지 않습니다.\",\n        \"otherOptions\": {}\n      },\n      \"id\": \"notify-low-priority\",\n      \"name\": \"Notify Low Priority\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        900,\n        400\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// 이메일 발송 실패 처리\\nconst error = $json;\\nconst originalError = $('Parse Error Data').item.json;\\n\\nconsole.error('에러 이메일 발송 실패:', error);\\n\\nreturn [{\\n  json: {\\n    originalErrorId: originalError.errorId,\\n    emailError: error.message || '알 수 없는 이메일 오류',\\n    fallbackRequired: true,\\n    timestamp: new Date().toISOString()\\n  }\\n}];\"\n      },\n      \"id\": \"handle-email-error\",\n      \"name\": \"Handle Email Error\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        1100,\n        400\n      ]\n    },\n    {\n      \"parameters\": {\n        \"channel\": \"{{ $env.SLACK_CHANNEL }}\",\n        \"text\": \"🚨 긴급: 에러 이메일 발송 실패!\\n\\n📧 원본 에러 ID: {{ $json.originalErrorId }}\\n💥 이메일 오류: {{ $json.emailError }}\\n⚠️ 수동 확인이 필요합니다!\\n\\n🔗 대시보드에서 확인하세요.\",\n        \"otherOptions\": {}\n      },\n      \"id\": \"notify-email-failure\",\n      \"name\": \"Notify Email Failure\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        1300,\n        400\n      ]\n    }\n  ],\n  \"connections\": {\n    \"System Error Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Error Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Error Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Email Required\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Email Required\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format Error Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Notify Low Priority\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format Error Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Error Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Error Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notify Email Sent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ],\n      \"error\": [\n        [\n          {\n            \"node\": \"Handle Email Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Handle Email Error\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notify Email Failure\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"createdAt\": \"2025-06-23T21:52:00.000Z\",\n  \"updatedAt\": \"2025-06-23T21:52:00.000Z\",\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": {\n      \"id\": \"error-workflow\"\n    }\n  },\n  \"staticData\": {},\n  \"tags\": [\"error\", \"email\", \"notification\", \"system\"]\n}"