[{"createdAt":"2025-06-25T00:00:00.000Z","updatedAt":"2025-06-25T00:00:00.000Z","id":"Nrcjz3Tkn3ga2xAy","name":"Master Automation Pipeline v2 - PRD Complete Implementation with Slack Integration","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 7 * * *"}]}},"id":"daily-master-cron","name":"Daily Master Cron (7 AM)","type":"n8n-nodes-base.cron","typeVersion":1,"position":[300,300]},{"parameters":{"jsCode":"// 마스터 파이프라인 초기화 및 시작 알림\nconst pipelineStart = {\n  session_id: `master_${Date.now()}`,\n  start_time: new Date().toISOString(),\n  prd_version: '1.0',\n  pipeline_type: 'complete_automation',\n  steps_completed: [],\n  \n  // PRD 요구사항 추적\n  prd_requirements: {\n    '5.2_orchestration': 'n8n을 지휘자로 사용하여 24/7 자동화',\n    '5.2_pipeline': '매일 7시 Cron → Sheets → RSS → 분석 → Slack',\n    '3.1_ai_pipeline': 'AI 2-Pass 파이프라인 완전 구현'\n  }\n};\n\nconsole.log('🚀 PRD 마스터 자동화 파이프라인 시작:', pipelineStart.session_id);\n\nreturn [{ json: pipelineStart }];"},"id":"initialize-master-pipeline","name":"Initialize Master Pipeline","type":"n8n-nodes-base.code","typeVersion":2,"position":[500,300]},{"parameters":{"method":"POST","url":"{{ $env.RSS_AUTOMATION_API_URL || 'http://localhost:5002' }}/notifications/pipeline-start","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"session_id","value":"={{ $json.session_id }}"},{"name":"channels_count","value":"0"}]},"options":{"timeout":10000}},"id":"notify-pipeline-start","name":"Notify Pipeline Start","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[700,300]},{"parameters":{"authentication":"serviceAccount","resource":"sheet","operation":"read","documentId":{"__rl":true,"value":"{{ $env.GOOGLE_SHEETS_SPREADSHEET_ID }}","mode":"id"},"sheetName":{"__rl":true,"value":"Channel List","mode":"name"},"options":{"range":"A:E"}},"id":"step1-read-channels","name":"Step 1: Read Channel List","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[900,300]},{"parameters":{"jsCode":"// 채널 목록 처리 및 RSS URL 생성\nconst channelData = $input.all();\nconst masterData = $('Initialize Master Pipeline').item.json;\nconst activeChannels = [];\n\nfor (const row of channelData) {\n  const channelId = row.json.channel_id;\n  const channelName = row.json.channel_name;\n  const status = row.json.status;\n  const channelType = row.json.channel_type;\n  const celebrityName = row.json.celebrity_name;\n  \n  if (status === 'active' && channelId) {\n    activeChannels.push({\n      channel_id: channelId,\n      channel_name: channelName,\n      channel_type: channelType,\n      celebrity_name: celebrityName,\n      rss_url: `https://www.youtube.com/feeds/videos.xml?channel_id=${channelId}`\n    });\n  }\n}\n\nconst result = {\n  ...masterData,\n  steps_completed: ['sheets_read'],\n  active_channels: activeChannels,\n  channels_count: activeChannels.length,\n  next_step: 'rss_collection'\n};\n\nconsole.log(`📋 활성 채널 ${activeChannels.length}개 로드 완료`);\n\nreturn [{ json: result }];"},"id":"process-channels","name":"Process Channel Data","type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,300]},{"parameters":{"method":"POST","url":"{{ $env.RSS_AUTOMATION_API_URL || 'http://localhost:5002' }}/collect-rss","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"channels","value":"={{ JSON.stringify($json.active_channels) }}"},{"name":"session_id","value":"={{ $json.session_id }}"},{"name":"exclude_shorts","value":"true"},{"name":"days_back","value":"1"}]},"options":{"timeout":60000}},"id":"step2-rss-collection","name":"Step 2: RSS Feed Collection","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"has-new-videos","leftValue":"={{ $json.new_videos && $json.new_videos.length }}","rightValue":"0","operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"id":"check-new-videos","name":"Check If New Videos Found","type":"n8n-nodes-base.if","typeVersion":2,"position":[1500,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/batch","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"videos","value":"={{ JSON.stringify($json.new_videos) }}"},{"name":"session_id","value":"={{ $('Process Channel Data').item.json.session_id }}"},{"name":"analysis_type","value":"full_pipeline"},{"name":"prd_compliant","value":"true"}]},"options":{"timeout":600000}},"id":"step3-ai-analysis","name":"Step 3: AI 2-Pass Analysis Pipeline","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,200]},{"parameters":{"jsCode":"// 분석 결과 처리 및 통계 생성\nconst analysisResult = $json;\nconst masterData = $('Process Channel Data').item.json;\n\nconst processedResult = {\n  ...masterData,\n  steps_completed: [...masterData.steps_completed, 'rss_collection', 'ai_analysis'],\n  analysis_result: analysisResult,\n  \n  // 통계 정보\n  statistics: {\n    videos_analyzed: analysisResult.total_videos || 0,\n    products_found: analysisResult.total_products || 0,\n    monetizable_products: analysisResult.monetizable_products || 0,\n    ppl_filtered: analysisResult.ppl_filtered || 0,\n    avg_score: analysisResult.average_score || 0\n  },\n  \n  // PRD 파이프라인 완료 상태\n  pipeline_status: {\n    whisper_analysis: 'completed',\n    gemini_first_pass: 'completed',\n    visual_analysis: 'completed',\n    gemini_second_pass: 'completed',\n    ppl_filtering: 'completed',\n    monetization_check: 'completed',\n    scoring: 'completed'\n  },\n  \n  next_step: 'notification'\n};\n\nconsole.log(`🤖 AI 분석 완료: ${processedResult.statistics.products_found}개 제품, ${processedResult.statistics.monetizable_products}개 수익화 가능`);\n\nreturn [{ json: processedResult }];"},"id":"process-analysis-results","name":"Process Analysis Results","type":"n8n-nodes-base.code","typeVersion":2,"position":[1900,200]},{"parameters":{"method":"POST","url":"{{ $env.RSS_AUTOMATION_API_URL || 'http://localhost:5002' }}/notifications/pipeline-success","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"session_id","value":"={{ $json.session_id }}"},{"name":"statistics","value":"={{ JSON.stringify($json.statistics) }}"},{"name":"execution_time","value":"={{ ((new Date() - new Date($json.start_time)) / 1000 / 60) }}"},{"name":"channels_count","value":"={{ $json.channels_count }}"}]},"options":{"timeout":10000}},"id":"step4-final-notification","name":"Step 4: Final Success Notification","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2100,200]},{"parameters":{"method":"POST","url":"{{ $env.RSS_AUTOMATION_API_URL || 'http://localhost:5002' }}/notifications/no-videos","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"session_id","value":"={{ $('Process Channel Data').item.json.session_id }}"},{"name":"channels_count","value":"={{ $('Process Channel Data').item.json.channels_count }}"}]},"options":{"timeout":10000}},"id":"no-videos-notification","name":"No New Videos Notification","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,400]},{"parameters":{"jsCode":"// 에러 처리 및 복구 시도\nconst error = $input.all()[0];\nconst masterData = $('Process Channel Data').item.json;\n\nconst errorData = {\n  session_id: masterData.session_id,\n  error_time: new Date().toISOString(),\n  error_step: 'pipeline_execution',\n  error_message: error.message || '알 수 없는 오류',\n  error_details: JSON.stringify(error, null, 2),\n  execution_time: ((new Date() - new Date(masterData.start_time)) / 1000).toFixed(1),\n  recovery_attempted: false\n};\n\nconsole.error('마스터 파이프라인 오류:', errorData);\n\nreturn [{ json: errorData }];"},"id":"handle-pipeline-error","name":"Handle Pipeline Error","type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,500]},{"parameters":{"method":"POST","url":"{{ $env.RSS_AUTOMATION_API_URL || 'http://localhost:5002' }}/notifications/pipeline-error","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"session_id","value":"={{ $json.session_id }}"},{"name":"error_message","value":"={{ $json.error_message }}"},{"name":"error_step","value":"={{ $json.error_step }}"}]},"options":{"timeout":10000}},"id":"error-notification","name":"Send Error Notification","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,500]}],"connections":{"Daily Master Cron (7 AM)":{"main":[[{"node":"Initialize Master Pipeline","type":"main","index":0}]]},"Initialize Master Pipeline":{"main":[[{"node":"Notify Pipeline Start","type":"main","index":0}]]},"Notify Pipeline Start":{"main":[[{"node":"Step 1: Read Channel List","type":"main","index":0}]]},"Step 1: Read Channel List":{"main":[[{"node":"Process Channel Data","type":"main","index":0}]],"error":[[{"node":"Handle Pipeline Error","type":"main","index":0}]]},"Process Channel Data":{"main":[[{"node":"Step 2: RSS Feed Collection","type":"main","index":0}]]},"Step 2: RSS Feed Collection":{"main":[[{"node":"Check If New Videos Found","type":"main","index":0}]],"error":[[{"node":"Handle Pipeline Error","type":"main","index":0}]]},"Check If New Videos Found":{"main":[[{"node":"Step 3: AI 2-Pass Analysis Pipeline","type":"main","index":0}],[{"node":"No New Videos Notification","type":"main","index":0}]]},"Step 3: AI 2-Pass Analysis Pipeline":{"main":[[{"node":"Process Analysis Results","type":"main","index":0}]],"error":[[{"node":"Handle Pipeline Error","type":"main","index":0}]]},"Process Analysis Results":{"main":[[{"node":"Step 4: Final Success Notification","type":"main","index":0}]]},"Handle Pipeline Error":{"main":[[{"node":"Send Error Notification","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner","errorWorkflow":{"id":"error-master-workflow"}},"staticData":{},"meta":{"templateCredsSetupCompleted":true,"prd_compliant":true,"version":"2.0","slack_integration":true},"pinData":null,"versionId":null,"triggerCount":0,"tags":[]},{"createdAt":"2025-06-25T07:00:00.000Z","updatedAt":"2025-06-25T07:00:00.000Z","id":"snkDyckbqBpzPt8a","name":"01. Daily RSS Feed Collection","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 7 * * *"}]}},"id":"daily-cron-7am","name":"Daily Cron (7 AM)","type":"n8n-nodes-base.cron","typeVersion":1,"position":[300,300]},{"parameters":{"authentication":"serviceAccount","resource":"sheet","operation":"read","documentId":{"__rl":true,"value":"{{ $env.GOOGLE_SHEETS_SPREADSHEET_ID }}","mode":"id"},"sheetName":{"__rl":true,"value":"Channel List","mode":"name"},"options":{"range":"A:E"}},"id":"read-channel-list","name":"Read Channel List from Google Sheets","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[500,300]},{"parameters":{"jsCode":"// 채널 목록에서 RSS 피드 URL 생성 및 필터링\nconst channelData = $input.all();\nconst rssUrls = [];\n\nfor (const row of channelData) {\n  const channelId = row.json.channel_id;\n  const channelName = row.json.channel_name;\n  const channelType = row.json.channel_type;\n  const status = row.json.status;\n  const celebrityName = row.json.celebrity_name;\n  \n  // 활성 상태인 채널만 처리\n  if (status === 'active' && channelId) {\n    rssUrls.push({\n      channel_id: channelId,\n      channel_name: channelName,\n      channel_type: channelType,\n      celebrity_name: celebrityName,\n      rss_url: `https://www.youtube.com/feeds/videos.xml?channel_id=${channelId}`\n    });\n  }\n}\n\nconsole.log(`활성 채널 ${rssUrls.length}개의 RSS 피드 준비 완료`);\n\nreturn rssUrls.map(url => ({ json: url }));"},"id":"prepare-rss-urls","name":"Prepare RSS Feed URLs","type":"n8n-nodes-base.code","typeVersion":2,"position":[700,300]},{"parameters":{"url":"={{ $json.rss_url }}","options":{"timeout":10000}},"id":"fetch-rss-feed","name":"Fetch RSS Feed","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[900,300]},{"parameters":{"jsCode":"// RSS XML 파싱하여 최신 영상 추출\nconst rssXml = $json.body;\nconst channelInfo = $('Prepare RSS Feed URLs').item.json;\nconst DOMParser = require('xmldom').DOMParser;\n\n// XML 파싱\nlet newVideos = [];\ntry {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(rssXml, 'text/xml');\n  const entries = xmlDoc.getElementsByTagName('entry');\n  \n  // 지난 24시간 내 업로드된 영상만 필터링\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  \n  for (let i = 0; i < Math.min(entries.length, 10); i++) {\n    const entry = entries[i];\n    const videoId = entry.getElementsByTagName('yt:videoId')[0]?.textContent;\n    const title = entry.getElementsByTagName('title')[0]?.textContent;\n    const published = entry.getElementsByTagName('published')[0]?.textContent;\n    const author = entry.getElementsByTagName('author')[0]?.getElementsByTagName('name')[0]?.textContent;\n    \n    if (videoId && title && published) {\n      const publishDate = new Date(published);\n      \n      // 24시간 내 업로드된 영상인지 확인\n      if (publishDate >= yesterday) {\n        // 미디어 채널의 경우 연예인 이름이 제목에 포함된 경우만\n        let shouldInclude = true;\n        if (channelInfo.channel_type === 'media' && channelInfo.celebrity_name) {\n          shouldInclude = title.toLowerCase().includes(channelInfo.celebrity_name.toLowerCase());\n        }\n        \n        // YouTube Shorts 제외 (PRD 요구사항)\n        const isShorts = title.toLowerCase().includes('#shorts') || \n                        title.toLowerCase().includes('shorts') ||\n                        title.includes('🩳');\n        \n        if (shouldInclude && !isShorts) {\n          newVideos.push({\n            video_id: videoId,\n            video_title: title,\n            video_url: `https://www.youtube.com/watch?v=${videoId}`,\n            channel_id: channelInfo.channel_id,\n            channel_name: channelInfo.channel_name,\n            channel_type: channelInfo.channel_type,\n            celebrity_name: channelInfo.celebrity_name,\n            published_date: published,\n            author: author,\n            discovery_date: new Date().toISOString()\n          });\n        }\n      }\n    }\n  }\n} catch (error) {\n  console.error('RSS 파싱 오류:', error);\n}\n\nconsole.log(`${channelInfo.channel_name}: ${newVideos.length}개 신규 영상 발견`);\n\nreturn newVideos.map(video => ({ json: video }));"},"id":"parse-rss-feed","name":"Parse RSS Feed for New Videos","type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"has-new-videos","leftValue":"={{ $json.video_id }}","rightValue":"","operator":{"type":"string","operation":"isNotEmpty"}}],"combinator":"and"},"options":{}},"id":"check-new-videos","name":"Check If New Videos Found","type":"n8n-nodes-base.if","typeVersion":2,"position":[1300,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/video","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"video_url","value":"={{ $json.video_url }}"},{"name":"video_id","value":"={{ $json.video_id }}"},{"name":"channel_info","value":"={{ JSON.stringify({channel_id: $json.channel_id, channel_name: $json.channel_name, channel_type: $json.channel_type, celebrity_name: $json.celebrity_name}) }}"},{"name":"priority","value":"normal"}]},"options":{"timeout":120000}},"id":"trigger-video-analysis","name":"Trigger Video Analysis","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1500,200]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"📺 새로운 영상 발견!"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"📺 새로운 영상 발견!\"}}, {\"type\": \"section\", \"fields\": [{\"type\": \"mrkdwn\", \"text\": \"*채널:*\\n\" + $json.channel_name}, {\"type\": \"mrkdwn\", \"text\": \"*연예인:*\\n\" + ($json.celebrity_name || 'N/A')}, {\"type\": \"mrkdwn\", \"text\": \"*영상 제목:*\\n\" + $json.video_title}, {\"type\": \"mrkdwn\", \"text\": \"*업로드:*\\n\" + new Date($json.published_date).toLocaleString('ko-KR')}]}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"🔗 <\" + $json.video_url + \"|영상 보기> | 🤖 분석 시작됨\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"📅 \" + new Date().toLocaleString('ko-KR') + \" | 🤖 자동 수집\"}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-new-video","name":"Notify New Video Found","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1500,400]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"✅ 일일 RSS 수집 완료 - 새로운 영상 없음"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"✅ 일일 RSS 수집 완료\"}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"📊 *결과:* 새로운 영상이 발견되지 않았습니다.\\n\\n💡 *참고:* 지난 24시간 내 업로드된 영상이 없거나, 이미 분석 완료된 영상들입니다.\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"📅 \" + new Date().toLocaleString('ko-KR') + \" | 🤖 자동 수집\"}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-no-videos","name":"Notify No New Videos","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,500]}],"connections":{"Daily Cron (7 AM)":{"main":[[{"node":"Read Channel List from Google Sheets","type":"main","index":0}]]},"Read Channel List from Google Sheets":{"main":[[{"node":"Prepare RSS Feed URLs","type":"main","index":0}]]},"Prepare RSS Feed URLs":{"main":[[{"node":"Fetch RSS Feed","type":"main","index":0}]]},"Fetch RSS Feed":{"main":[[{"node":"Parse RSS Feed for New Videos","type":"main","index":0}]]},"Parse RSS Feed for New Videos":{"main":[[{"node":"Check If New Videos Found","type":"main","index":0}]]},"Check If New Videos Found":{"main":[[{"node":"Trigger Video Analysis","type":"main","index":0},{"node":"Notify New Video Found","type":"main","index":0}],[{"node":"Notify No New Videos","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":{},"meta":null,"pinData":null,"versionId":null,"triggerCount":0,"tags":[]},{"createdAt":"2025-06-25T07:00:00.000Z","updatedAt":"2025-06-25T07:00:00.000Z","id":"7meFTag7LXBKDugU","name":"02. Channel Discovery","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"trigger-channel-discovery","options":{"noResponseBody":false}},"id":"manual-trigger","name":"Manual Channel Discovery Trigger","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[300,300],"webhookId":"channel-discovery-trigger"},{"parameters":{"jsCode":"// 채널 탐색 파라미터 설정\nconst triggerData = $input.all()[0].json;\n\n// 기본 설정\nconst discoveryParams = {\n  keywords: triggerData.keywords || [\"아이유\", \"뷰티\", \"패션\", \"메이크업\", \"스킨케어\"],\n  days_back: triggerData.days_back || 7,\n  max_candidates: triggerData.max_candidates || 50,\n  min_score: triggerData.min_score || 40,\n  search_period: triggerData.search_period || \"week\",\n  channel_types: triggerData.channel_types || [\"personal\", \"media\"],\n  session_id: `discovery_${Date.now()}`,\n  start_time: new Date().toISOString()\n};\n\nconsole.log('채널 탐색 시작:', discoveryParams);\n\nreturn [{ json: discoveryParams }];"},"id":"setup-discovery-params","name":"Setup Discovery Parameters","type":"n8n-nodes-base.code","typeVersion":2,"position":[500,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/discover","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"keywords","value":"={{ JSON.stringify($json.keywords) }}"},{"name":"days_back","value":"={{ $json.days_back }}"},{"name":"max_candidates","value":"={{ $json.max_candidates }}"},{"name":"min_score","value":"={{ $json.min_score }}"},{"name":"search_period","value":"={{ $json.search_period }}"},{"name":"channel_types","value":"={{ JSON.stringify($json.channel_types) }}"}]},"options":{"timeout":300000}},"id":"run-channel-discovery","name":"Run Channel Discovery","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[700,300]},{"parameters":{"jsCode":"// 채널 탐색 결과 처리\nconst discoveryResult = $json;\nconst setupData = $('Setup Discovery Parameters').item.json;\n\n// 결과 통계 계산\nconst candidates = discoveryResult.candidates || [];\nconst totalCandidates = candidates.length;\nconst highScoreCandidates = candidates.filter(c => c.total_score >= 70).length;\nconst verifiedCandidates = candidates.filter(c => c.verified).length;\n\n// Google Sheets 저장용 데이터 준비\nconst sheetsData = [];\nconst currentTime = new Date().toISOString().replace('T', ' ').substring(0, 19);\n\nfor (const candidate of candidates) {\n  sheetsData.push({\n    discovery_date: currentTime,\n    session_id: setupData.session_id,\n    channel_name: candidate.channel_name || '',\n    channel_id: candidate.channel_id || '',\n    channel_handle: candidate.channel_handle || '',\n    subscriber_count: candidate.subscriber_count || 0,\n    video_count: candidate.video_count || 0,\n    total_score: (candidate.total_score || 0).toFixed(2),\n    matching_score: (candidate.matching_score || 0).toFixed(2),\n    quality_score: (candidate.quality_score || 0).toFixed(2),\n    potential_score: (candidate.potential_score || 0).toFixed(2),\n    verified: candidate.verified ? \"✓\" : \"✗\",\n    country: candidate.country || '',\n    channel_type: candidate.channel_type || '',\n    description: (candidate.description || '').substring(0, 100) + (candidate.description && candidate.description.length > 100 ? '...' : ''),\n    channel_url: candidate.channel_url || '',\n    status: 'needs_review'\n  });\n}\n\n// 결과 데이터 구성\nconst processedResult = {\n  session_id: setupData.session_id,\n  start_time: setupData.start_time,\n  end_time: new Date().toISOString(),\n  execution_time: discoveryResult.execution_time_seconds || 0,\n  total_candidates: totalCandidates,\n  high_score_candidates: highScoreCandidates,\n  verified_candidates: verifiedCandidates,\n  candidates: candidates,\n  sheets_data: sheetsData,\n  success: discoveryResult.success || false,\n  session_stats: discoveryResult.session_stats || {},\n  search_params: setupData\n};\n\nconsole.log(`채널 탐색 완료: ${totalCandidates}개 후보 발견`);\n\nreturn [{ json: processedResult }];"},"id":"process-discovery-results","name":"Process Discovery Results","type":"n8n-nodes-base.code","typeVersion":2,"position":[900,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"has-candidates","leftValue":"={{ $json.total_candidates }}","rightValue":"0","operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"id":"check-discovery-results","name":"Check If Candidates Found","type":"n8n-nodes-base.if","typeVersion":2,"position":[1100,300]},{"parameters":{"jsCode":"// Google Sheets용 데이터 변환\nconst result = $json;\nconst sheetsData = result.sheets_data || [];\n\nconsole.log(`Google Sheets 저장용 데이터 준비: ${sheetsData.length}개 행`);\n\nreturn sheetsData.map(data => ({ json: data }));"},"id":"format-for-sheets","name":"Format Data for Google Sheets","type":"n8n-nodes-base.code","typeVersion":2,"position":[1300,200]},{"parameters":{"authentication":"serviceAccount","resource":"sheet","operation":"append","documentId":{"__rl":true,"value":"{{ $env.GOOGLE_SHEETS_SPREADSHEET_ID }}","mode":"id"},"sheetName":{"__rl":true,"value":"Channel Discovery Results","mode":"name"},"columnNames":"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q","options":{"useAppend":true}},"id":"save-to-sheets","name":"Save Results to Google Sheets","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[1500,200]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"🎯 채널 탐색 완료! {{ $json.total_candidates }}개 후보 발견"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"🎯 채널 탐색 완료!\"}}, {\"type\": \"section\", \"fields\": [{\"type\": \"mrkdwn\", \"text\": \"*발견된 후보:*\\n\" + $json.total_candidates + \"개\"}, {\"type\": \"mrkdwn\", \"text\": \"*고득점 후보:*\\n\" + $json.high_score_candidates + \"개\"}, {\"type\": \"mrkdwn\", \"text\": \"*인증 채널:*\\n\" + $json.verified_candidates + \"개\"}, {\"type\": \"mrkdwn\", \"text\": \"*실행 시간:*\\n\" + $json.execution_time.toFixed(1) + \"초\"}]}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"🏆 *상위 후보들:*\\n\" + $json.candidates.slice(0, 5).map((c, i) => `${i+1}. <${c.channel_url}|${c.channel_name}> (${c.total_score.toFixed(1)}점, ${c.subscriber_count.toLocaleString()}명) ${c.verified ? '✓' : '✗'}`).join('\\n')}}, {\"type\": \"divider\"}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"📋 <https://docs.google.com/spreadsheets/d/\" + $env.GOOGLE_SHEETS_SPREADSHEET_ID + \"|Google Sheets에서 전체 결과 확인>\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"완료 시간: \" + new Date().toLocaleString('ko-KR') + \" | 세션: \" + $json.session_id}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-success","name":"Notify Discovery Success","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,200]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"😔 채널 탐색 완료 - 새로운 후보 없음"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"😔 채널 탐색 완료\"}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*결과:* 검색 조건에 맞는 새로운 채널 후보를 찾지 못했습니다.\\n\\n*실행 시간:* \" + $json.execution_time.toFixed(1) + \"초\\n*세션 ID:* \" + $json.session_id}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"💡 *제안:*\\n• 검색 키워드 조정\\n• 점수 기준 낮추기\\n• 검색 기간 늘리기\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"완료 시간: \" + new Date().toLocaleString('ko-KR') + \" | 시스템: n8n 자동화\"}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-no-results","name":"Notify No Results","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,400]}],"connections":{"Manual Channel Discovery Trigger":{"main":[[{"node":"Setup Discovery Parameters","type":"main","index":0}]]},"Setup Discovery Parameters":{"main":[[{"node":"Run Channel Discovery","type":"main","index":0}]]},"Run Channel Discovery":{"main":[[{"node":"Process Discovery Results","type":"main","index":0}]]},"Process Discovery Results":{"main":[[{"node":"Check If Candidates Found","type":"main","index":0}]]},"Check If Candidates Found":{"main":[[{"node":"Format Data for Google Sheets","type":"main","index":0}],[{"node":"Notify No Results","type":"main","index":0}]]},"Format Data for Google Sheets":{"main":[[{"node":"Save Results to Google Sheets","type":"main","index":0}]]},"Save Results to Google Sheets":{"main":[[{"node":"Notify Discovery Success","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":{},"meta":null,"pinData":null,"versionId":null,"triggerCount":0,"tags":[]},{"createdAt":"2025-06-25T07:00:00.000Z","updatedAt":"2025-06-25T07:00:00.000Z","id":"4et0ZLlLbeBo9gp5","name":"03. AI Analysis Pipeline","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"trigger-ai-analysis","options":{"noResponseBody":false}},"id":"analysis-trigger","name":"AI Analysis Trigger","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[300,300],"webhookId":"ai-analysis-trigger"},{"parameters":{"jsCode":"// AI 분석 파라미터 설정 및 검증\nconst triggerData = $input.all()[0].json;\n\n// 필수 파라미터 검증\nif (!triggerData.video_url) {\n  throw new Error('video_url is required');\n}\n\n// 분석 설정\nconst analysisParams = {\n  video_url: triggerData.video_url,\n  video_id: triggerData.video_id || extractVideoId(triggerData.video_url),\n  channel_info: triggerData.channel_info || {},\n  priority: triggerData.priority || 'normal',\n  analysis_type: triggerData.analysis_type || 'full', // full, quick, audio_only\n  session_id: `analysis_${Date.now()}`,\n  start_time: new Date().toISOString(),\n  \n  // AI 2-Pass 파이프라인 설정\n  whisper_model: 'small', // PRD 요구사항: Whisper small 모델\n  gemini_model: '2.5-flash', // PRD 요구사항: Gemini 2.5 Flash\n  enable_ocr: true,\n  enable_object_detection: true,\n  enable_ppl_detection: true,\n  enable_monetization_check: true,\n  \n  // 점수 가중치 (PRD 공식)\n  scoring_weights: {\n    sentiment_score: 0.50,\n    endorsement_score: 0.35,\n    influencer_score: 0.15\n  }\n};\n\n// 비디오 ID 추출 함수\nfunction extractVideoId(url) {\n  const match = url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([a-zA-Z0-9_-]+)/);\n  return match ? match[1] : null;\n}\n\nconsole.log('AI 분석 시작:', analysisParams);\n\nreturn [{ json: analysisParams }];"},"id":"setup-analysis-params","name":"Setup Analysis Parameters","type":"n8n-nodes-base.code","typeVersion":2,"position":[500,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/whisper","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"video_url","value":"={{ $json.video_url }}"},{"name":"video_id","value":"={{ $json.video_id }}"},{"name":"model","value":"{{ $json.whisper_model }}"},{"name":"session_id","value":"={{ $json.session_id }}"}]},"options":{"timeout":300000}},"id":"step1-whisper-analysis","name":"Step 1: Whisper Audio Analysis","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[700,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/gemini-first-pass","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"transcript","value":"={{ JSON.stringify($json.transcript) }}"},{"name":"video_id","value":"={{ $('Setup Analysis Parameters').item.json.video_id }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"},{"name":"model","value":"{{ $('Setup Analysis Parameters').item.json.gemini_model }}"}]},"options":{"timeout":120000}},"id":"step2-gemini-first-pass","name":"Step 2: Gemini First Pass (탐색)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[900,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"has-candidate-segments","leftValue":"={{ $json.candidate_segments && $json.candidate_segments.length }}","rightValue":"0","operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"id":"check-candidate-segments","name":"Check If Candidate Segments Found","type":"n8n-nodes-base.if","typeVersion":2,"position":[1100,300]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/visual","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"video_url","value":"={{ $('Setup Analysis Parameters').item.json.video_url }}"},{"name":"candidate_segments","value":"={{ JSON.stringify($json.candidate_segments) }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"},{"name":"enable_ocr","value":"{{ $('Setup Analysis Parameters').item.json.enable_ocr }}"},{"name":"enable_object_detection","value":"{{ $('Setup Analysis Parameters').item.json.enable_object_detection }}"}]},"options":{"timeout":300000}},"id":"step3-visual-analysis","name":"Step 3: Visual Analysis (OCR + Object Detection)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,200]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/gemini-second-pass","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"audio_data","value":"={{ JSON.stringify($('Step 2: Gemini First Pass (탐색)').item.json) }}"},{"name":"visual_data","value":"={{ JSON.stringify($json) }}"},{"name":"video_id","value":"={{ $('Setup Analysis Parameters').item.json.video_id }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"},{"name":"channel_info","value":"={{ JSON.stringify($('Setup Analysis Parameters').item.json.channel_info) }}"}]},"options":{"timeout":120000}},"id":"step4-gemini-second-pass","name":"Step 4: Gemini Second Pass (종합)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1500,200]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/ppl-filter","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"analysis_result","value":"={{ JSON.stringify($json) }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"}]},"options":{"timeout":60000}},"id":"step5-ppl-filtering","name":"Step 5: PPL Content Filtering","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,200]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/monetization","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"products","value":"={{ JSON.stringify($json.products || []) }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"}]},"options":{"timeout":60000}},"id":"step6-monetization-check","name":"Step 6: Monetization Verification (Coupang)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1900,200]},{"parameters":{"method":"POST","url":"{{ $env.CHANNEL_DISCOVERY_API_URL || 'http://localhost:5001' }}/analyze/scoring","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"analysis_data","value":"={{ JSON.stringify($json) }}"},{"name":"scoring_weights","value":"={{ JSON.stringify($('Setup Analysis Parameters').item.json.scoring_weights) }}"},{"name":"session_id","value":"={{ $('Setup Analysis Parameters').item.json.session_id }}"}]},"options":{"timeout":60000}},"id":"step7-scoring","name":"Step 7: Attractiveness Scoring","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2100,200]},{"parameters":{"jsCode":"// 최종 분석 결과 처리 및 정리\nconst finalResult = $json;\nconst setupData = $('Setup Analysis Parameters').item.json;\n\n// 분석 완료 데이터 구성\nconst processedResult = {\n  session_id: setupData.session_id,\n  video_url: setupData.video_url,\n  video_id: setupData.video_id,\n  channel_info: setupData.channel_info,\n  start_time: setupData.start_time,\n  end_time: new Date().toISOString(),\n  execution_time: ((new Date() - new Date(setupData.start_time)) / 1000).toFixed(1),\n  \n  // 분석 결과\n  analysis_result: finalResult,\n  total_products: finalResult.products ? finalResult.products.length : 0,\n  monetizable_products: finalResult.monetizable_products ? finalResult.monetizable_products.length : 0,\n  filtered_products: finalResult.filtered_products ? finalResult.filtered_products.length : 0,\n  \n  // 상태 정보\n  status: 'analysis_complete',\n  success: true,\n  \n  // 타임스탬프\n  completed_at: new Date().toISOString()\n};\n\nconsole.log(`AI 분석 완료: ${processedResult.total_products}개 제품 발견, ${processedResult.monetizable_products}개 수익화 가능`);\n\nreturn [{ json: processedResult }];"},"id":"finalize-analysis","name":"Finalize Analysis Results","type":"n8n-nodes-base.code","typeVersion":2,"position":[2300,200]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"🤖 AI 분석 완료!"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"🤖 AI 분석 완료!\"}}, {\"type\": \"section\", \"fields\": [{\"type\": \"mrkdwn\", \"text\": \"*영상:*\\n<\" + $json.video_url + \"|\" + ($json.channel_info.channel_name || 'Unknown') + \">\"}, {\"type\": \"mrkdwn\", \"text\": \"*발견된 제품:*\\n\" + $json.total_products + \"개\"}, {\"type\": \"mrkdwn\", \"text\": \"*수익화 가능:*\\n\" + $json.monetizable_products + \"개\"}, {\"type\": \"mrkdwn\", \"text\": \"*실행 시간:*\\n\" + $json.execution_time + \"초\"}]}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"📊 *분석 파이프라인:*\\n✅ Whisper 음성 분석\\n✅ Gemini 1차 탐색\\n✅ 시각 분석 (OCR + Object)\\n✅ Gemini 2차 종합\\n✅ PPL 필터링\\n✅ 쿠팡 수익화 검증\\n✅ 매력도 스코어링\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"완료: \" + new Date().toLocaleString('ko-KR') + \" | 세션: \" + $json.session_id}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-analysis-complete","name":"Notify Analysis Complete","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2500,200]},{"parameters":{"method":"POST","url":"{{ $env.SLACK_WEBHOOK_URL }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"😔 AI 분석 완료 - 제품 후보 없음"},{"name":"blocks","value":"={{ JSON.stringify([{\"type\": \"header\", \"text\": {\"type\": \"plain_text\", \"text\": \"😔 AI 분석 완료\"}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"*결과:* 제품 추천 구간을 찾지 못했습니다.\\n\\n*분석된 영상:*\\n<\" + $('Setup Analysis Parameters').item.json.video_url + \"|\" + ($('Setup Analysis Parameters').item.json.channel_info.channel_name || 'Unknown') + \">\\n\\n*세션 ID:* \" + $('Setup Analysis Parameters').item.json.session_id}}, {\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"💡 *가능한 원인:*\\n• 제품 언급이 없는 영상\\n• 추천 맥락이 명확하지 않음\\n• 음성 인식 품질 문제\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"완료: \" + new Date().toLocaleString('ko-KR') + \" | 시스템: AI 분석 파이프라인\"}]}]) }}"}]},"options":{"timeout":10000}},"id":"notify-no-products","name":"Notify No Products Found","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,400]}],"connections":{"AI Analysis Trigger":{"main":[[{"node":"Setup Analysis Parameters","type":"main","index":0}]]},"Setup Analysis Parameters":{"main":[[{"node":"Step 1: Whisper Audio Analysis","type":"main","index":0}]]},"Step 1: Whisper Audio Analysis":{"main":[[{"node":"Step 2: Gemini First Pass (탐색)","type":"main","index":0}]]},"Step 2: Gemini First Pass (탐색)":{"main":[[{"node":"Check If Candidate Segments Found","type":"main","index":0}]]},"Check If Candidate Segments Found":{"main":[[{"node":"Step 3: Visual Analysis (OCR + Object Detection)","type":"main","index":0}],[{"node":"Notify No Products Found","type":"main","index":0}]]},"Step 3: Visual Analysis (OCR + Object Detection)":{"main":[[{"node":"Step 4: Gemini Second Pass (종합)","type":"main","index":0}]]},"Step 4: Gemini Second Pass (종합)":{"main":[[{"node":"Step 5: PPL Content Filtering","type":"main","index":0}]]},"Step 5: PPL Content Filtering":{"main":[[{"node":"Step 6: Monetization Verification (Coupang)","type":"main","index":0}]]},"Step 6: Monetization Verification (Coupang)":{"main":[[{"node":"Step 7: Attractiveness Scoring","type":"main","index":0}]]},"Step 7: Attractiveness Scoring":{"main":[[{"node":"Finalize Analysis Results","type":"main","index":0}]]},"Finalize Analysis Results":{"main":[[{"node":"Notify Analysis Complete","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":{},"meta":null,"pinData":null,"versionId":null,"triggerCount":0,"tags":[]},{"createdAt":"2025-06-23T21:48:00.000Z","updatedAt":"2025-06-23T21:48:00.000Z","id":"1LXzZtFFbkpnDqdi","name":"Google Sheets Real-time Sync Workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"sheets-webhook","options":{"noResponseBody":false}},"id":"sheets-webhook","name":"Google Sheets Webhook","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[300,300],"webhookId":"google-sheets-changes"},{"parameters":{"jsCode":"// Google Sheets Webhook 데이터 파싱\nconst webhookData = $json;\n\nconsole.log('Google Sheets 변경사항 감지:', webhookData);\n\n// Webhook 데이터 구조 파싱\nconst changeData = {\n  eventType: webhookData.eventType || 'unknown',\n  spreadsheetId: webhookData.spreadsheetId,\n  sheetId: webhookData.sheetId,\n  range: webhookData.range,\n  changeType: webhookData.changeType || 'edit',\n  timestamp: new Date().toISOString(),\n  rawData: webhookData\n};\n\n// 채널 목록 시트 변경인지 확인\nconst isChannelListChange = changeData.spreadsheetId === $env.GOOGLE_SHEETS_CHANNEL_LIST_ID;\n\nreturn [{\n  json: {\n    ...changeData,\n    isChannelListChange: isChannelListChange,\n    needsSync: isChannelListChange\n  }\n}];"},"id":"parse-webhook-data","name":"Parse Webhook Data","type":"n8n-nodes-base.code","typeVersion":2,"position":[500,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"is-channel-list","leftValue":"={{ $json.isChannelListChange }}","rightValue":"true","operator":{"type":"boolean","operation":"equal"}}],"combinator":"and"},"options":{}},"id":"check-channel-list","name":"Check Channel List Change","type":"n8n-nodes-base.if","typeVersion":2,"position":[700,300]},{"parameters":{"authentication":"serviceAccount","resource":"sheet","operation":"read","documentId":{"__rl":true,"value":"{{$env.GOOGLE_SHEETS_CHANNEL_LIST_ID}}","mode":"id"},"sheetName":{"__rl":true,"value":"채널목록","mode":"name"},"options":{"range":"A:D","valueRenderMode":"FORMATTED_VALUE"}},"id":"read-updated-channels","name":"Read Updated Channel List","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[900,200]},{"parameters":{"jsCode":"// 업데이트된 채널 목록 처리 및 변경사항 탐지\nconst channels = [];\nconst inputData = $input.all();\nconst webhookData = $('Parse Webhook Data').item.json;\n\n// 현재 시간\nconst syncTime = new Date().toISOString();\n\n// 첫 번째 행은 헤더이므로 제외\nfor (let i = 1; i < inputData.length; i++) {\n  const row = inputData[i].json;\n  \n  // 채널명, RSS URL, 타입, 연예인 이름 추출\n  if (row.A && row.B) { // 채널명과 RSS URL이 있는 경우만\n    channels.push({\n      channelName: row.A,\n      rssUrl: row.B,\n      channelType: row.C || 'personal',\n      celebrityNames: row.D ? row.D.split(',').map(name => name.trim()) : [],\n      lastUpdated: syncTime\n    });\n  }\n}\n\nconsole.log(`채널 목록 동기화: ${channels.length}개 채널 업데이트됨`);\n\n// 동기화 결과 데이터 구성\nconst syncResult = {\n  syncTime: syncTime,\n  totalChannels: channels.length,\n  changeEvent: webhookData,\n  channels: channels,\n  syncStatus: 'completed'\n};\n\nreturn [{ json: syncResult }];"},"id":"process-channel-sync","name":"Process Channel Sync","type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,200]},{"parameters":{"method":"POST","url":"{{ $env.PYTHON_ANALYSIS_ENDPOINT }}/sync-channels","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"Authorization","value":"Bearer {{ $env.ANALYSIS_API_KEY }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"channels","value":"={{ JSON.stringify($json.channels) }}"},{"name":"sync_time","value":"={{ $json.syncTime }}"},{"name":"total_channels","value":"={{ $json.totalChannels }}"}]},"options":{"timeout":15000}},"id":"update-python-channels","name":"Update Python System Channels","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1300,200]},{"parameters":{"channel":"{{ $env.SLACK_CHANNEL }}","text":"📋 채널 목록 자동 동기화 완료\\n\\n📊 동기화 결과:\\n- 총 채널 수: {{ $json.totalChannels }}개\\n- 동기화 시간: {{ $json.syncTime }}\\n- 변경 범위: {{ $('Parse Webhook Data').item.json.range }}\\n\\n✅ Python 시스템과 동기화 완료","otherOptions":{}},"id":"notify-sync-success","name":"Notify Sync Success","type":"n8n-nodes-base.slack","typeVersion":2.1,"position":[1500,200]},{"parameters":{"jsCode":"// 채널 목록 변경이 아닌 경우 로깅\nconst webhookData = $json;\n\nconsole.log('비채널 목록 시트 변경사항 감지:', webhookData.spreadsheetId);\n\nreturn [{\n  json: {\n    message: '채널 목록이 아닌 시트 변경사항 감지됨',\n    spreadsheetId: webhookData.spreadsheetId,\n    action: 'ignored',\n    timestamp: new Date().toISOString()\n  }\n}];"},"id":"log-other-changes","name":"Log Other Sheet Changes","type":"n8n-nodes-base.code","typeVersion":2,"position":[900,400]},{"parameters":{"jsCode":"// 에러 처리 및 로깅\nconst error = $json;\nconst webhookData = $('Parse Webhook Data').item.json;\n\nconsole.error('채널 동기화 실패:', error);\n\nreturn [{\n  json: {\n    error: error.message || '알 수 없는 오류',\n    webhookData: webhookData,\n    errorTime: new Date().toISOString(),\n    status: 'sync_failed'\n  }\n}];"},"id":"handle-sync-error","name":"Handle Sync Error","type":"n8n-nodes-base.code","typeVersion":2,"position":[1300,400]},{"parameters":{"channel":"{{ $env.SLACK_CHANNEL }}","text":"❌ 채널 목록 동기화 실패\\n\\n💥 에러 내용:\\n{{ $json.error }}\\n\\n⏰ 발생 시간: {{ $json.errorTime }}\\n\\n🔧 운영자 확인이 필요합니다.","otherOptions":{}},"id":"notify-sync-error","name":"Notify Sync Error","type":"n8n-nodes-base.slack","typeVersion":2.1,"position":[1500,400]}],"connections":{"Google Sheets Webhook":{"main":[[{"node":"Parse Webhook Data","type":"main","index":0}]]},"Parse Webhook Data":{"main":[[{"node":"Check Channel List Change","type":"main","index":0}]]},"Check Channel List Change":{"main":[[{"node":"Read Updated Channel List","type":"main","index":0}],[{"node":"Log Other Sheet Changes","type":"main","index":0}]]},"Read Updated Channel List":{"main":[[{"node":"Process Channel Sync","type":"main","index":0}]]},"Process Channel Sync":{"main":[[{"node":"Update Python System Channels","type":"main","index":0}]]},"Update Python System Channels":{"main":[[{"node":"Notify Sync Success","type":"main","index":0}]],"error":[[{"node":"Handle Sync Error","type":"main","index":0}]]},"Handle Sync Error":{"main":[[{"node":"Notify Sync Error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner","errorWorkflow":{"id":"error-workflow"}},"staticData":{},"meta":null,"pinData":null,"versionId":null,"triggerCount":0,"tags":[]},{"createdAt":"2025-06-23T21:56:00.000Z","updatedAt":"2025-06-23T21:56:00.000Z","id":"DWeYSvD8EqKBBv6U","name":"Notification Priority Routing Workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"notification-router","options":{"noResponseBody":false}},"id":"notification-webhook","name":"Notification Router Webhook","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[300,300],"webhookId":"notification-router"},{"parameters":{"jsCode":"// 알림 우선순위 분류 및 라우팅 로직\nconst notificationData = $json;\n\nconsole.log('알림 라우팅 요청 수신:', notificationData.type);\n\n// 알림 타입별 우선순위 정의\nconst priorityMatrix = {\n  // 시스템 알림\n  'system_error': { priority: 'CRITICAL', channels: ['email', 'slack'], throttle: 0 },\n  'system_warning': { priority: 'HIGH', channels: ['slack'], throttle: 300 }, // 5분\n  'system_info': { priority: 'MEDIUM', channels: ['slack'], throttle: 1800 }, // 30분\n  \n  // 분석 알림\n  'analysis_completed': { priority: 'MEDIUM', channels: ['slack'], throttle: 0 },\n  'analysis_failed': { priority: 'HIGH', channels: ['slack', 'email'], throttle: 0 },\n  'high_score_candidate': { priority: 'HIGH', channels: ['slack'], throttle: 0 },\n  \n  // 채널 관리 알림\n  'channel_sync': { priority: 'LOW', channels: ['slack'], throttle: 3600 }, // 1시간\n  'channel_error': { priority: 'MEDIUM', channels: ['slack'], throttle: 600 }, // 10분\n  \n  // 수익화 알림\n  'monetization_opportunity': { priority: 'HIGH', channels: ['slack'], throttle: 0 },\n  'coupang_api_error': { priority: 'HIGH', channels: ['slack', 'email'], throttle: 0 },\n  \n  // 일반 운영 알림\n  'daily_report': { priority: 'LOW', channels: ['slack', 'email'], throttle: 86400 }, // 24시간\n  'weekly_summary': { priority: 'LOW', channels: ['email'], throttle: 604800 }, // 7일\n  \n  // 사용자 액션 알림\n  'user_approval': { priority: 'MEDIUM', channels: ['slack'], throttle: 0 },\n  'user_rejection': { priority: 'LOW', channels: [], throttle: 0 } // 로그만\n};\n\n// 기본 설정\nconst defaultPriority = { priority: 'MEDIUM', channels: ['slack'], throttle: 0 };\n\n// 알림 타입에 따른 설정 가져오기\nconst notificationType = notificationData.type || 'unknown';\nconst config = priorityMatrix[notificationType] || defaultPriority;\n\n// 내용 기반 우선순위 조정\nfunction adjustPriorityByContent(baseConfig, data) {\n  const content = (data.message || data.title || '').toLowerCase();\n  const urgentKeywords = ['critical', 'fatal', 'crash', 'down', 'failure', '치명적', '심각', '중단'];\n  const importantKeywords = ['error', 'warning', 'timeout', '에러', '경고', '실패'];\n  \n  if (urgentKeywords.some(keyword => content.includes(keyword))) {\n    return {\n      ...baseConfig,\n      priority: 'CRITICAL',\n      channels: ['email', 'slack']\n    };\n  } else if (importantKeywords.some(keyword => content.includes(keyword))) {\n    return {\n      ...baseConfig,\n      priority: baseConfig.priority === 'LOW' ? 'MEDIUM' : baseConfig.priority\n    };\n  }\n  \n  return baseConfig;\n}\n\nconst finalConfig = adjustPriorityByContent(config, notificationData);\n\n// 스로틀링 체크를 위한 키 생성\nconst throttleKey = `${notificationType}_${notificationData.component || 'global'}`;\n\n// 알림 메타데이터 구성\nconst routingData = {\n  // 원본 데이터\n  originalData: notificationData,\n  \n  // 라우팅 정보\n  notificationType: notificationType,\n  priority: finalConfig.priority,\n  channels: finalConfig.channels,\n  throttleKey: throttleKey,\n  throttleSeconds: finalConfig.throttle,\n  \n  // 타임스탬프\n  receivedAt: new Date().toISOString(),\n  \n  // 메타데이터\n  metadata: {\n    source: notificationData.source || 'unknown',\n    component: notificationData.component || 'system',\n    environment: notificationData.environment || 'production',\n    userId: notificationData.user_id || null,\n    requestId: notificationData.request_id || null\n  },\n  \n  // 우선순위별 처리 방식\n  processingConfig: {\n    immediate: finalConfig.priority === 'CRITICAL',\n    requiresEmail: finalConfig.channels.includes('email'),\n    requiresSlack: finalConfig.channels.includes('slack'),\n    canThrottle: finalConfig.throttle > 0\n  }\n};\n\nconsole.log(`알림 라우팅 완료: ${notificationType} -> ${finalConfig.priority} (${finalConfig.channels.join(', ')})`);\n\nreturn [{ json: routingData }];"},"id":"classify-notification","name":"Classify Notification Priority","type":"n8n-nodes-base.code","typeVersion":2,"position":[500,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"can-throttle","leftValue":"={{ $json.processingConfig.canThrottle }}","rightValue":"true","operator":{"type":"boolean","operation":"equal"}}],"combinator":"and"},"options":{}},"id":"check-throttling","name":"Check Throttling Required","type":"n8n-nodes-base.if","typeVersion":2,"position":[700,300]},{"parameters":{"method":"GET","url":"{{ $env.REDIS_ENDPOINT || $env.PYTHON_ANALYSIS_ENDPOINT }}/throttle/check","sendQuery":true,"queryParameters":{"parameters":[{"name":"key","value":"={{ $json.throttleKey }}"},{"name":"seconds","value":"={{ $json.throttleSeconds }}"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer {{ $env.ANALYSIS_API_KEY }}"}]},"options":{"timeout":5000}},"id":"check-throttle-status","name":"Check Throttle Status","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[900,200]},{"parameters":{"jsCode":"// 스로틀링 상태 확인 및 처리 결정\nconst routingData = $('Classify Notification Priority').item.json;\nconst throttleResult = $json;\n\nconst shouldProcess = !throttleResult.is_throttled;\n\nif (shouldProcess) {\n  console.log(`알림 처리 진행: ${routingData.notificationType}`);\n} else {\n  console.log(`알림 스로틀링됨: ${routingData.notificationType} (마지막 발송: ${throttleResult.last_sent})`);\n}\n\nreturn [{\n  json: {\n    ...routingData,\n    shouldProcess: shouldProcess,\n    throttleInfo: throttleResult,\n    decision: shouldProcess ? 'PROCESS' : 'THROTTLED'\n  }\n}];"},"id":"evaluate-throttle","name":"Evaluate Throttle Decision","type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,200]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"should-process","leftValue":"={{ $json.shouldProcess }}","rightValue":"true","operator":{"type":"boolean","operation":"equal"}}],"combinator":"and"},"options":{}},"id":"check-should-process","name":"Check Should Process","type":"n8n-nodes-base.if","typeVersion":2,"position":[1300,200]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"needs-email","leftValue":"={{ $json.processingConfig.requiresEmail }}","rightValue":"true","operator":{"type":"boolean","operation":"equal"}}],"combinator":"and"},"options":{}},"id":"check-email-required","name":"Check Email Required","type":"n8n-nodes-base.if","typeVersion":2,"position":[1500,100]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"needs-slack","leftValue":"={{ $json.processingConfig.requiresSlack }}","rightValue":"true","operator":{"type":"boolean","operation":"equal"}}],"combinator":"and"},"options":{}},"id":"check-slack-required","name":"Check Slack Required","type":"n8n-nodes-base.if","typeVersion":2,"position":[1500,300]},{"parameters":{"method":"POST","url":"{{ $env.N8N_WEBHOOK_BASE_URL }}/webhook/system-error","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"originalData","value":"={{ JSON.stringify($json.originalData) }}"},{"name":"priority","value":"={{ $json.priority }}"},{"name":"routing_source","value":"notification-router"}]},"options":{"timeout":10000}},"id":"trigger-email-workflow","name":"Trigger Email Workflow","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,50]},{"parameters":{"method":"POST","url":"{{ $env.N8N_WEBHOOK_BASE_URL }}/webhook/analysis-complete","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"originalData","value":"={{ JSON.stringify($json.originalData) }}"},{"name":"priority","value":"={{ $json.priority }}"},{"name":"routing_source","value":"notification-router"}]},"options":{"timeout":10000}},"id":"trigger-slack-workflow","name":"Trigger Slack Workflow","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1700,250]},{"parameters":{"method":"POST","url":"{{ $env.REDIS_ENDPOINT || $env.PYTHON_ANALYSIS_ENDPOINT }}/throttle/set","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"Authorization","value":"Bearer {{ $env.ANALYSIS_API_KEY }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"key","value":"={{ $json.throttleKey }}"},{"name":"seconds","value":"={{ $json.throttleSeconds }}"},{"name":"metadata","value":"={{ JSON.stringify($json.metadata) }}"}]},"options":{"timeout":5000}},"id":"update-throttle-status","name":"Update Throttle Status","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1900,200]},{"parameters":{"jsCode":"// 즉시 처리 (스로틀링 없음)\nconst routingData = $json;\n\nconsole.log(`즉시 처리: ${routingData.notificationType} (우선순위: ${routingData.priority})`);\n\nreturn [{\n  json: {\n    ...routingData,\n    decision: 'IMMEDIATE_PROCESS',\n    bypassThrottle: true\n  }\n}];"},"id":"immediate-processing","name":"Immediate Processing","type":"n8n-nodes-base.code","typeVersion":2,"position":[900,400]},{"parameters":{"jsCode":"// 스로틀링된 알림 로깅\nconst routingData = $json;\n\nconsole.log(`알림 스로틀링: ${routingData.notificationType} - ${routingData.throttleInfo?.reason || '빈도 제한'}`);\n\nreturn [{\n  json: {\n    notificationType: routingData.notificationType,\n    decision: 'THROTTLED',\n    reason: '빈도 제한으로 인한 스킵',\n    lastSent: routingData.throttleInfo?.last_sent,\n    nextAllowed: routingData.throttleInfo?.next_allowed,\n    timestamp: new Date().toISOString()\n  }\n}];"},"id":"log-throttled-notification","name":"Log Throttled Notification","type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,500]},{"parameters":{"jsCode":"// 알림 라우팅 완료 로깅\nconst routingData = $('Check Should Process').item.json;\nconst emailResult = $('Trigger Email Workflow').item?.json || null;\nconst slackResult = $('Trigger Slack Workflow').item?.json || null;\n\nconst summary = {\n  notificationType: routingData.notificationType,\n  priority: routingData.priority,\n  channelsTriggered: {\n    email: !!emailResult,\n    slack: !!slackResult\n  },\n  processedAt: new Date().toISOString(),\n  throttleUpdated: true\n};\n\nconsole.log(`알림 라우팅 완료: ${JSON.stringify(summary)}`);\n\nreturn [{ json: summary }];"},"id":"log-routing-completion","name":"Log Routing Completion","type":"n8n-nodes-base.code","typeVersion":2,"position":[2100,200]}],"connections":{"Notification Router Webhook":{"main":[[{"node":"Classify Notification Priority","type":"main","index":0}]]},"Classify Notification Priority":{"main":[[{"node":"Check Throttling Required","type":"main","index":0}]]},"Check Throttling Required":{"main":[[{"node":"Check Throttle Status","type":"main","index":0}],[{"node":"Immediate Processing","type":"main","index":0}]]},"Check Throttle Status":{"main":[[{"node":"Evaluate Throttle Decision","type":"main","index":0}]]},"Evaluate Throttle Decision":{"main":[[{"node":"Check Should Process","type":"main","index":0}]]},"Check Should Process":{"main":[[{"node":"Check Email Required","type":"main","index":0},{"node":"Check Slack Required","type":"main","index":0}],[{"node":"Log Throttled Notification","type":"main","index":0}]]},"Check Email Required":{"main":[[{"node":"Trigger Email Workflow","type":"main","index":0}]]},"Check Slack Required":{"main":[[{"node":"Trigger Slack Workflow","type":"main","index":0}]]},"Trigger Email Workflow":{"main":[[{"node":"Update Throttle Status","type":"main","index":0}]]},"Trigger Slack Workflow":{"main":[[{"node":"Update Throttle Status","type":"main","index":0}]]},"Update Throttle Status":{"main":[[{"node":"Log Routing Completion","type":"main","index":0}]]},"Immediate Processing":{"main":[[{"node":"Check Email Required","type":"main","index":0},{"node":"Check Slack Required","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner","errorWorkflow":{"id":"error-workflow"}},"staticData":{},"meta":null,"pinData":null,"versionId":null,"triggerCount":0,"tags":[]}]