version: '3.8'

services:
  # GPU 서버 - AI 모델 처리
  gpu-server:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: influence_item_gpu
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
    env_file:
      - .env
    ports:
      - "8001:8001"
    volumes:
      - ./temp:/app/temp
      - ./yolo11n.pt:/app/yolo11n.pt:ro
    networks:
      - influence_network
    healthcheck:
      test: ["CMD", "python3", "-c", "import torch; print('GPU Available:', torch.cuda.is_available())"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # CPU 서버 - 대시보드 및 메인 앱
  cpu-server:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: influence_item_cpu
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - GPU_SERVER_URL=http://gpu-server:8001
    env_file:
      - .env
    ports:
      - "8501:8501"
    volumes:
      - ./influence_item.db:/app/influence_item.db
      - ./temp:/app/temp
      - ./screenshots:/app/screenshots
    networks:
      - influence_network
    depends_on:
      gpu-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 로드 밸런서 (nginx)
  nginx:
    image: nginx:alpine
    container_name: influence_item_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - influence_network
    depends_on:
      - cpu-server
      - gpu-server

networks:
  influence_network:
    driver: bridge

volumes:
  gpu_cache:
    driver: local