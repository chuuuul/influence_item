apiVersion: v1
kind: Namespace
metadata:
  name: influence-item
  labels:
    name: influence-item
    version: v1.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influence-item-cpu
  namespace: influence-item
  labels:
    app: influence-item-cpu
    tier: backend
    version: v1.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: influence-item-cpu
  template:
    metadata:
      labels:
        app: influence-item-cpu
        tier: backend
        version: v1.0
    spec:
      containers:
      - name: cpu-server
        image: influence-item/cpu-server:v1.0
        ports:
        - containerPort: 8501
          name: http
          protocol: TCP
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: STREAMLIT_SERVER_PORT
          value: "8501"
        - name: STREAMLIT_SERVER_ADDRESS
          value: "0.0.0.0"
        - name: GPU_SERVER_URL
          value: "http://influence-item-gpu-service:8001"
        - name: REGION
          valueFrom:
            configMapKeyRef:
              name: region-config
              key: region
        envFrom:
        - secretRef:
            name: influence-item-secrets
        - configMapRef:
            name: influence-item-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: temp-storage
          mountPath: /app/temp
        - name: screenshots-storage
          mountPath: /app/screenshots
        - name: db-storage
          mountPath: /app/db
      volumes:
      - name: temp-storage
        persistentVolumeClaim:
          claimName: influence-item-temp-pvc
      - name: screenshots-storage
        persistentVolumeClaim:
          claimName: influence-item-screenshots-pvc
      - name: db-storage
        persistentVolumeClaim:
          claimName: influence-item-db-pvc
      nodeSelector:
        workload-type: general
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influence-item-gpu
  namespace: influence-item
  labels:
    app: influence-item-gpu
    tier: compute
    version: v1.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: influence-item-gpu
  template:
    metadata:
      labels:
        app: influence-item-gpu
        tier: compute
        version: v1.0
    spec:
      containers:
      - name: gpu-server
        image: influence-item/gpu-server:v1.0
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: PYTHONPATH
          value: "/app"
        - name: REGION
          valueFrom:
            configMapKeyRef:
              name: region-config
              key: region
        envFrom:
        - secretRef:
            name: influence-item-secrets
        - configMapRef:
            name: influence-item-config
        resources:
          requests:
            memory: "8Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
        volumeMounts:
        - name: temp-storage
          mountPath: /app/temp
        - name: model-storage
          mountPath: /app/models
        - name: gpu-cache
          mountPath: /app/cache
      volumes:
      - name: temp-storage
        persistentVolumeClaim:
          claimName: influence-item-temp-pvc
      - name: model-storage
        persistentVolumeClaim:
          claimName: influence-item-models-pvc
      - name: gpu-cache
        persistentVolumeClaim:
          claimName: influence-item-gpu-cache-pvc
      nodeSelector:
        accelerator: nvidia-tesla-t4
        workload-type: gpu-intensive
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: influence-item-cpu-service
  namespace: influence-item
  labels:
    app: influence-item-cpu
spec:
  type: ClusterIP
  ports:
  - port: 8501
    targetPort: 8501
    protocol: TCP
    name: http
  selector:
    app: influence-item-cpu
---
apiVersion: v1
kind: Service
metadata:
  name: influence-item-gpu-service
  namespace: influence-item
  labels:
    app: influence-item-gpu
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  selector:
    app: influence-item-gpu
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: influence-item-ingress
  namespace: influence-item
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - influence-item.com
    - www.influence-item.com
    secretName: influence-item-tls
  rules:
  - host: influence-item.com
    http:
      paths:
      - path: /api/gpu/(.*)
        pathType: Prefix
        backend:
          service:
            name: influence-item-gpu-service
            port:
              number: 8001
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: influence-item-cpu-service
            port:
              number: 8501
  - host: www.influence-item.com
    http:
      paths:
      - path: /api/gpu/(.*)
        pathType: Prefix
        backend:
          service:
            name: influence-item-gpu-service
            port:
              number: 8001
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: influence-item-cpu-service
            port:
              number: 8501
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: region-config
  namespace: influence-item
data:
  region: "${REGION}"
  availability-zone: "${AVAILABILITY_ZONE}"
  environment: "production"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: influence-item-config
  namespace: influence-item
data:
  STREAMLIT_SERVER_PORT: "8501"
  STREAMLIT_SERVER_ADDRESS: "0.0.0.0"
  GPU_SERVER_URL: "http://influence-item-gpu-service:8001"
  LOG_LEVEL: "info"
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  WORKER_PROCESSES: "4"
  WORKER_CONNECTIONS: "1000"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influence-item-temp-pvc
  namespace: influence-item
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influence-item-screenshots-pvc
  namespace: influence-item
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influence-item-db-pvc
  namespace: influence-item
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3-sc
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influence-item-models-pvc
  namespace: influence-item
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 30Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influence-item-gpu-cache-pvc
  namespace: influence-item
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3-sc
  resources:
    requests:
      storage: 50Gi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: influence-item-cpu-hpa
  namespace: influence-item
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: influence-item-cpu
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: influence-item-gpu-hpa
  namespace: influence-item
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: influence-item-gpu
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Pods
        value: 1
        periodSeconds: 300
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: influence-item-cpu-pdb
  namespace: influence-item
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: influence-item-cpu
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: influence-item-gpu-pdb
  namespace: influence-item
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: influence-item-gpu